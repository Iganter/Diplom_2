{
  "uid" : "1856aa6543269d3f",
  "name" : "Без авторизации → 401",
  "fullName" : "tests.test_orders.TestOrders#test_order_without_auth",
  "historyId" : "cc0a9e7f208e7fcf691bbe2bd607e777",
  "time" : {
    "start" : 1750948448481,
    "stop" : 1750948448571,
    "duration" : 90
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 200 == 401\n +  where 200 = <Response [200]>.status_code\n +  and   401 = StatusCodes.UNAUTHORIZED",
  "statusTrace" : "self = <tests.test_orders.TestOrders object at 0x000002012C866870>, api_client = <api_client.ApiClient object at 0x000002012C8B3E30>\n\n    @allure.title(\"Без авторизации → 401\")\n    def test_order_without_auth(self, api_client):\n        ings = api_client.get_ingredients().json()[\"data\"]\n        resp = api_client.create_order([ings[0][\"_id\"]])\n>       assert resp.status_code == StatusCodes.UNAUTHORIZED\nE       assert 200 == 401\nE        +  where 200 = <Response [200]>.status_code\nE        +  and   401 = StatusCodes.UNAUTHORIZED\n\ntests\\test_orders.py:25: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1750948444584,
      "stop" : 1750948444612,
      "duration" : 28
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "api_client",
    "time" : {
      "start" : 1750948444612,
      "stop" : 1750948444612,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 200 == 401\n +  where 200 = <Response [200]>.status_code\n +  and   401 = StatusCodes.UNAUTHORIZED",
    "statusTrace" : "self = <tests.test_orders.TestOrders object at 0x000002012C866870>, api_client = <api_client.ApiClient object at 0x000002012C8B3E30>\n\n    @allure.title(\"Без авторизации → 401\")\n    def test_order_without_auth(self, api_client):\n        ings = api_client.get_ingredients().json()[\"data\"]\n        resp = api_client.create_order([ings[0][\"_id\"]])\n>       assert resp.status_code == StatusCodes.UNAUTHORIZED\nE       assert 200 == 401\nE        +  where 200 = <Response [200]>.status_code\nE        +  and   401 = StatusCodes.UNAUTHORIZED\n\ntests\\test_orders.py:25: AssertionError",
    "steps" : [ {
      "name" : "Get ingredients list",
      "time" : {
        "start" : 1750948448481,
        "stop" : 1750948448524,
        "duration" : 43
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Create order",
      "time" : {
        "start" : 1750948448524,
        "stop" : 1750948448569,
        "duration" : 45
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "ingredients",
        "value" : "['61c0c5a71d1f82001bdaaa6d']"
      }, {
        "name" : "token",
        "value" : "None"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 2
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "Создание заказа"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_orders"
  }, {
    "name" : "subSuite",
    "value" : "TestOrders"
  }, {
    "name" : "host",
    "value" : "DESKTOP-47CL42P"
  }, {
    "name" : "thread",
    "value" : "22616-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_orders"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "1856aa6543269d3f.json",
  "parameterValues" : [ ]
}